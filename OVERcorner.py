import pyautogui
import keyboard
import time
from pynput.mouse import Listener
import pystray
from PIL import Image
import threading
import sys
import io
import base64

# Настройки
hot_corner_size = 4
win_tab_active = False
left_mouse_pressed = False
right_mouse_pressed = False  # Добавляем отслеживание ПКМ
last_action_time = 0
cooldown = 1.5
is_typing = False
is_paused = False
program_running = True

# Встроенные иконки в формате base64 (заменяем на ваши реальные иконки в base64)
ICON_ACTIVE_BASE64 = """"""

ICON_PAUSED_BASE64 = """"""

# Функция для загрузки иконки из base64
def load_icon_from_base64(base64_str):
    icon_data = base64.b64decode(base64_str)
    return Image.open(io.BytesIO(icon_data))

# Загружаем иконки
icon_active = load_icon_from_base64(ICON_ACTIVE_BASE64)
icon_paused = load_icon_from_base64(ICON_PAUSED_BASE64)

def get_monitors():
    monitors = []
    try:
        import win32api
        import win32con
        monitor_info = win32api.EnumDisplayMonitors()
        for i, (handle, _, (x, y, width, height)) in enumerate(monitor_info):
            monitors.append({
                "id": i,
                "x": x,
                "y": y,
                "width": width,
                "height": height
            })
    except:
        width, height = pyautogui.size()
        monitors.append({
            "id": 0,
            "x": 0,
            "y": 0,
            "width": width,
            "height": height
        })
    return monitors

monitors = get_monitors()

def is_in_hot_corner(x, y):
    for monitor in monitors:
        monitor_left = monitor["x"]
        monitor_top = monitor["y"]
        monitor_right = monitor["x"] + monitor["width"]
        monitor_bottom = monitor["y"] + monitor["height"]
        
        if (monitor_left <= x < monitor_right and 
            monitor_top <= y < monitor_bottom):
            
            if (x - monitor_left < hot_corner_size and 
                y - monitor_top < hot_corner_size):
                return True
    return False

def update_tray_icon():
    tray_icon.icon = icon_paused if is_paused else icon_active
    tray_icon.title = "OVERcorner (paused)" if is_paused else "OVERcorner (Active)"

def toggle_pause():
    global is_paused
    is_paused = not is_paused
    update_tray_icon()
    print("Stopped" if is_paused else "Resumed")

def on_quit():
    global program_running
    program_running = False
    tray_icon.stop()
    mouse_listener.stop()

menu = pystray.Menu(
    pystray.MenuItem("Stop/Resume", toggle_pause),
    pystray.MenuItem("Exit", on_quit)
)

tray_icon = pystray.Icon("OVERcorner", icon_active, "OVERcorner", menu)

def run_tray_icon():
    tray_icon.run()

tray_thread = threading.Thread(target=run_tray_icon, daemon=True)
tray_thread.start()

def on_click(x, y, button, pressed):
    global left_mouse_pressed, right_mouse_pressed
    if button == button.left:
        left_mouse_pressed = pressed
    elif button == button.right:
        right_mouse_pressed = pressed

mouse_listener = Listener(on_click=on_click)
mouse_listener.start()

keyboard.add_hotkey('home', toggle_pause)

def main_loop():
    global win_tab_active, left_mouse_pressed, right_mouse_pressed, last_action_time, is_typing
    
    while program_running:
        if not is_paused:
            x, y = pyautogui.position()
            current_time = time.time()
            
            if (is_in_hot_corner(x, y) 
                    and not win_tab_active 
                    and not is_typing
                    and current_time - last_action_time > cooldown):
                
                win_tab_active = True
                keyboard.press('win')
                keyboard.press('tab')
                time.sleep(0.1)
                keyboard.release('tab')
                keyboard.release('win')
                
                while win_tab_active and not is_paused and program_running:
                    if keyboard.is_pressed('esc'):
                        win_tab_active = False
                        last_action_time = current_time
                        break
                    
                    if left_mouse_pressed:
                        win_tab_active = False
                        left_mouse_pressed = False
                        last_action_time = current_time
                        break
                        
                    # Обработка ПКМ в углу
                    if right_mouse_pressed:
                        win_tab_active = False
                        right_mouse_pressed = False
                        keyboard.press('win')
                        keyboard.release('win')
                        last_action_time = current_time
                        break
                    
                    for letter in 'abcdefghijklmnopqrstuvwxyz':
                        if keyboard.is_pressed(letter):
                            is_typing = True
                            keyboard.press('win')
                            keyboard.release('win')
                            time.sleep(0.2)
                            keyboard.write(letter)
                            win_tab_active = False
                            last_action_time = current_time
                            time.sleep(0.5)
                            is_typing = False
                            break
                    
                    time.sleep(0.01)
        
        time.sleep(0.1)

main_thread = threading.Thread(target=main_loop, daemon=True)
main_thread.start()

try:
    while program_running:
        time.sleep(1)
except KeyboardInterrupt:
    on_quit()